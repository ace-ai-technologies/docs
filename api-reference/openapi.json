{
  "openapi": "3.0.1",
  "info": {
    "title": "Ace AI API",
    "description": "API for managing AI agents and related services like fine-tuning models and producing synthetic data.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://aceaicompany.com",
      "description": "TODO: REPLACE THIS WITH PROPER URL AS WELL AS AUTH"
    }
  ],

  "paths": {
    "/agent/fineTune": {

      "post": {
        "description": "Fine-tunes an AI agent using the specified dataset and task.",
        "requestBody": {
          "description": "Details about the agent and dataset to fine-tune.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FineTuneRequest"
              }
            }
          },
          "required": true
        },
        
        "responses": {
          "200": {
            "description": "Agent fine-tuning successfully triggered.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FineTuneResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }

        }
      }


      
    },
    




    "/agent/produceSyntheticData": {
      "get": {
        "description": "Requests an AI agent to generate synthetic data.",
        "parameters": [
          {
            "name": "TBD - Awaitng route spec.",
            "in": "path",
            "description": "ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Synthetic data generation request successfully sent.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Request a fine-tuned agent to produce synthetic data."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },



  
  "components": {
    "schemas": {
      "FineTuneRequest": {
        "required": ["agentId", "agentName", "datasetId", "datasetName", "task"],
        "type": "object",
        "properties": {
          "agentId": {
            "description": "Unique identifier for the agent.",
            "type": "integer"
          },
          "agentName": {
            "description": "Name of the agent to be fine-tuned.",
            "type": "string"
          },
          "datasetId": {
            "description": "Unique identifier for the dataset.",
            "type": "integer"
          },
          "datasetName": {
            "description": "Name of the dataset to be used for fine-tuning.",
            "type": "string"
          },
          "task": {
            "description": "Type of task for fine-tuning (e.g., classification, regression).",
            "type": "string"
          }
        }
      },
      "FineTuneResponse": {
        "required": ["success", "msg"],
        "type": "object",
        "properties": {
          "success": {
            "description": "Indicates whether the fine-tuning request was successfully processed.",
            "type": "boolean"
          },
          "msg": {
            "description": "Message confirming the operation.",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "Detailed error message."
          }
        }
      }
    }
  }
}